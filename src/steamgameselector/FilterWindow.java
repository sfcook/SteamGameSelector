/*
 * The MIT License
 *
 * Copyright 2014 sfcook.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package steamgameselector;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Collections;

/**
 *
 * @author sfcook
 */
public class FilterWindow extends javax.swing.JPanel {
    SteamGameSelector gameSelector;
    public Map<String,Tag> tags;

    /**
     * Creates new form FilterWindow
     */
    public FilterWindow(Map<String,Tag> tags) {
        this.tags=tags;
        initComponents();
        initTags();
    }
    
    private void initTags()
    {
        DefaultTableModel model=(DefaultTableModel)tblTags.getModel();
        
        ArrayList<Tag> tagArray=new ArrayList();
        
        for(Map.Entry entry:this.tags.entrySet())
        {
            tagArray.add((Tag)entry.getValue());
        }
        Collections.sort(tagArray);
        for(Tag tag:tagArray)
        {
            model.addRow(new Object[]{tag.tag,tag.and,tag.or,tag.not});
        }
        tblTags.setModel(model);
    }
    
    public Map<String,Tag> getTags()
    {
        return tags;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrTblTags = new javax.swing.JScrollPane();
        tblTags = new javax.swing.JTable();

        tblTags.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"All", null, null, null}
            },
            new String [] {
                "Tag", "AND", "OR", "NOT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTags.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblTagsPropertyChange(evt);
            }
        });
        scrTblTags.setViewportView(tblTags);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrTblTags, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrTblTags, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblTagsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblTagsPropertyChange
        int selectedRow=tblTags.getSelectedRow();
        int selectedCol=tblTags.getSelectedColumn();
        
        if(selectedCol>0)
            return;
        
        DefaultTableModel model=(DefaultTableModel)tblTags.getModel();
        
        boolean check=(Boolean)model.getValueAt(selectedCol, selectedRow);
        
        switch(selectedCol)
        {
            case 1:
                
                break;
            case 2:
                
                break;
            case 3:
                
                break;
            default:
                break;
        }
    }//GEN-LAST:event_tblTagsPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrTblTags;
    private javax.swing.JTable tblTags;
    // End of variables declaration//GEN-END:variables
}
